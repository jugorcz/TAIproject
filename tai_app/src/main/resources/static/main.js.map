{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task-detail/task-detail.component.css","webpack:///./src/app/task-detail/task-detail.component.html","webpack:///./src/app/task-detail/task-detail.component.ts","webpack:///./src/app/task.service.ts","webpack:///./src/app/task.ts","webpack:///./src/app/tasks/tasks.component.css","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/app/user-info.service.ts","webpack:///./src/app/user-info/user-info.component.css","webpack:///./src/app/user-info/user-info.component.html","webpack:///./src/app/user-info/user-info.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/', pathMatch: 'full' , runGuardsAndResolvers: 'always'},\n//{ path: '', redirectTo: '/dashboard', pathMatch: 'full'  },\n  { path: 'task/:id', component: TaskDetailComponent },\n//  { path: 'user', component: UserInfoComponent },\n  { path: 'task', component: TasksComponent }\n]\n\n@NgModule({\n  imports: [ [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})] ] ,\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n  /* AppComponent's private CSS styles */\\n  h1 {\\n    font-size: 1.2em;\\n    color: #999;\\n    margin-bottom: 0;\\n  }\\n  h2 {\\n    font-size: 2em;\\n    margin-top: 0;\\n    padding-top: 0;\\n  }\\n  nav a {\\n    padding: 5px 10px;\\n    text-decoration: none;\\n    margin-top: 10px;\\n    display: inline-block;\\n    background-color: #eee;\\n    border-radius: 4px;\\n  }\\n  nav a:visited, a:link {\\n    color: #607d8b;\\n  }\\n  nav a:hover {\\n    color: #039be5;\\n    background-color: #cfd8dc;\\n  }\\n  nav a.active {\\n    color: #039be5;\\n  }\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div *ngIf=\\\"userInfo != null\\\">\\n  <h2>{{ userInfo.firstName + \\\" \\\" + userInfo.lastName}}</h2>\\n</div>\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n\\n  <nav>\\n      <div *ngIf=\\\"userInfo != null; then ifblock else elseBlock\\\"></div>\\n      <ng-template #ifblock>\\n        <button (click)=\\\"logout()\\\">Logout</button>\\n        <a routerLink=\\\"/task\\\">Tasks</a>\\n      </ng-template>\\n      <ng-template #elseBlock>\\n        <a href=\\\"/api/login/oauth/iiet\\\">Login</a>\\n      </ng-template>\\n  </nav>\\n  <!--button (click)=\\\"login()\\\">login</button-->\\n  <router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UserInfo } from './userinfo';\nimport { UserInfoService } from './user-info.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tai';\n  logoutUrl = '/api/logout'\n  userInfo: UserInfo;\n\n  constructor(private http: HttpClient, private userInfoService: UserInfoService, private router: Router) {}\n\n  getUserInfo(): void {\n    this.userInfoService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  ngOnInit() {\n    this.getUserInfo();\n  }\n\n  logout(): void {\n      this.http.post('/api/logout', {}).subscribe();\n      this.userInfo = null;\n      this.router.navigateByUrl('/');\n  }\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TaskDetailComponent,\n    UserInfoComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"task\\\">\\n\\n  <h2>{{ task.name | uppercase }} Details</h2>\\n  <div><span>id: </span>{{task.id}}</div>\\n  <div>\\n    <label>name:\\n      <input [(ngModel)]=\\\"task.name\\\" placeholder=\\\"name\\\">\\n    </label>\\n  </div>\\n  <button (click)=\\\"goBack()\\\">go back</button>\\n\\n  <button (click)=\\\"save()\\\">save</button>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Task } from '../task'\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.css']\n})\nexport class TaskDetailComponent implements OnInit {\n  @Input() task: Task;\n\n  constructor(\n    private route: ActivatedRoute,\n    private taskService: TaskService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getTask();\n  }\n\n  getTask(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.taskService.getTask(id)\n      .subscribe(task => this.task = task);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.taskService.updateTask(this.task)\n      .subscribe(() => this.goBack());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap  } from 'rxjs/operators';\n\n//import { TaskStatus } from './taskstatus';\nimport { Observable, of } from 'rxjs';\nimport { Task } from './task';\nimport { UserInfo } from './userinfo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private apiUrl = \"/api\";\n  private taskUrl = this.apiUrl + \"/task\"\n\n  constructor(private http: HttpClient) { }\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.taskUrl).pipe(\n      catchError(this.handleError('getTasks'))\n    );\n  }\n\n  getTask(id: number): Observable<Task> {\n    return this.http.get<Task>(this.taskUrl + `/${id}`).pipe(\n      catchError(this.handleError(`getTask id=${id}`))\n    );\n  }\n\n  putTask(task: Task): Observable<any> {\n    return this.http.put<Task>(this.taskUrl, task, httpOptions).pipe(\n      catchError(this.handleError('putTask'))\n    );\n  }\n\n  updateTask(task: Task): Observable<any> {\n    return this.http.post<Task>(this.taskUrl, task, httpOptions).pipe(\n      catchError(this.handleError(`updateTask id=${task.id}`))\n    );\n  }\n\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete<Task>(this.taskUrl + `/${id}`, httpOptions).pipe(\n      catchError(this.handleError(`deleteTask id=${id}`))\n    );\n  }\n\n  private handleError (operation = 'operation') {\n    return (error: any): Observable<any> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.messageService.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(null);\n    };\n  }\n}\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n","import { TaskStatus } from './taskstatus'\n\nexport class Task {\n  id: number;\n  name: string;\n  taskStatus: TaskStatus;\n  date: Date;\n  userId: string;\n  category: string;\n}\n","module.exports = \"/* HeroesComponent's private CSS styles */\\n.tasks {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.tasks li {\\n  position: relative;\\n  cursor: pointer;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.tasks li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.tasks a {\\n  color: #888;\\n  text-decoration: none;\\n  position: relative;\\n  display: block;\\n  width: 250px;\\n}\\n.tasks a:hover {\\n  color:#607D8B;\\n}\\n.tasks .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  min-width: 16px;\\n  text-align: right;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n.tasks button {\\n  float: right;\\n}\\n\"","module.exports = \"<h2>My Tasks</h2>\\n<ul class=\\\"tasks\\\">\\n  <li *ngFor=\\\"let task of tasks\\\">\\n    <div class=row>\\n      <a routerLink=\\\"/task/{{task.id}}\\\">\\n        <span class=\\\"badge\\\">{{task.id}}</span> {{task.name}}\\n      </a>\\n      <button (click)=\\\"delete(task.id)\\\">Delete</button>\\n    </div>\\n  </li>\\n</ul>\\n\\n<div>\\n  <label>name:\\n    <input [(ngModel)]=\\\"currentTask.name\\\" placeholder=\\\"name\\\">\\n  </label>\\n  <button (click)=\\\"saveTask()\\\">save</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TaskService } from '../task.service';\nimport { Task } from '../task';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[];\n  @Input() currentTask: Task;\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit() {\n    this.getTasks();\n    this.currentTask = new Task();\n  }\n\n  getTasks(): void {\n    this.taskService.getTasks().subscribe(tasks => this.tasks = tasks);\n  }\n\n  delete(id: number) {\n    this.tasks = this.tasks.filter(t => t.id !== id);\n    this.taskService.deleteTask(id).subscribe();\n  }\n\n  saveTask(){\n    this.taskService.putTask(this.currentTask).subscribe(task => { if(task !== null){ this.tasks.push(task); }});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap  } from 'rxjs/operators';\n\nimport { Observable, of } from 'rxjs';\nimport { UserInfo } from './userinfo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserInfoService {\n  httpOK = 200;\n  private apiUrl = \"/api\";\n  private userInfoUrl = this.apiUrl + \"/user\";\n\n  constructor(private http: HttpClient) {}\n\n  getUserInfo(): Observable<any> {\n    return this.http.get<any>(this.userInfoUrl).pipe(\n        map(res => {\n            return { firstName: res.userAuthentication.details.first_name,\n                     lastName:  res.userAuthentication.details.last_name };\n        }),\n        catchError(this.handleError('getUserInfo'))\n    );\n  }\n\n  private handleError (operation = 'operation') {\n    return (error: any): Observable<any> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.messageService.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(null);\n    };\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"userInfo\\\">\\n  <h2>{{ userInfo.firstName + \\\" \\\" + userInfo.lastName}}</h2>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserInfo } from '../userinfo';\nimport { UserInfoService } from '../user-info.service';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n  userInfo: UserInfo;\n  constructor(private userInfoService: UserInfoService) { }\n\n  ngOnInit() {\n    this.getUserInfo();\n  }\n\n  getUserInfo(): void {\n    this.userInfoService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}